/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin mq($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/*
 * Adds background image
 * @name - image name, @w - image width, $h - image height
 */
@mixin bg($path, $w, $h) {
  $w: pxToRem($w);
  $h: pxToRem($h);

  background : {
    image: url('#{$path}');
    size: $w, $h;
    repeat: no-repeat;
  };
  width : $w;
  height: $h;
}

@mixin placeholder-color($color: #d7dce5) {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    color: $color;
  }
  &::-moz-placeholder { /* Firefox 19+ */
    color: $color;
  }
  &:-ms-input-placeholder { /* IE 10+ */
    color: $color;
  }
  &:-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
}

@mixin placeholder() {
  background-image: url(../img/pic.png);
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: 50px auto;
}